"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/tanda-2017/index.html","e1e638be46b4842fb5da32d34dea9d7c"],["/tanda-2017/static/css/main.3fd80bae.css","43bcb69f81ee20e3825b8979dfd3574d"],["/tanda-2017/static/js/main.e9b27c42.js","446380635f63c2a94da89ff7e1de9fe6"],["/tanda-2017/static/media/Americano.c7cffb40.png","c7cffb407c433a7ec08293776a238abf"],["/tanda-2017/static/media/Cappucino.c7197126.png","c7197126e88d7c59495fb2efb8b5f635"],["/tanda-2017/static/media/Espresso.5cdd1756.png","5cdd175616f9362c7603a04fa94cfeb9"],["/tanda-2017/static/media/Long Black.d6dd4f65.png","d6dd4f65aa1d4bd545ed37e8ebea2dd5"],["/tanda-2017/static/media/Viena.010e1b2f.png","010e1b2fdf2e49139a3462a0b6badc14"],["/tanda-2017/static/media/campos.81d86f11.png","81d86f11da970ac4f22b5692ab89b1a6"],["/tanda-2017/static/media/coffee.7e6a9bc3.jpg","7e6a9bc321a264a28e8738e8c5144198"],["/tanda-2017/static/media/cup.da56c268.png","da56c2686c510f20bacd0de09543f9b2"],["/tanda-2017/static/media/darwin.d04a7fb8.png","d04a7fb8b36d63d81187fa496074d6ba"],["/tanda-2017/static/media/girl.b16612d9.png","b16612d9b7aa9e691ea72897a7d9cbe1"],["/tanda-2017/static/media/logo.893a1b83.png","893a1b832258e99b89d7b371fc202dc5"],["/tanda-2017/static/media/merlos.6ac280e7.png","6ac280e78eca04690e219f2ffb587a95"],["/tanda-2017/static/media/roy.d2a3931d.png","d2a3931d35b912c0ed61b3a06386bafd"],["/tanda-2017/static/media/shalini.3b8ab606.png","3b8ab606c67083cc53b98f1a7a642460"],["/tanda-2017/static/media/sophia.40074474.jpg","400744742092182df5bebbe3e2d9d7b0"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(a){return new Response(a,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,a,t,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),r.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return a.every(function(a){return!a.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],n=new URL(a,self.location),r=createCacheKey(n,hashParamName,t,/\.\w{8}\./);return[n.toString(),r]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var n=new Request(t,{credentials:"same-origin"});return fetch(n).then(function(a){if(!a.ok)throw new Error("Request for "+t+" returned a response with status "+a.status);return cleanResponse(a).then(function(a){return e.put(t,a)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(t){return Promise.all(t.map(function(t){if(!a.has(t.url))return e.delete(t)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var a,t=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(a=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,"index.html"),a=urlsToCacheKeys.has(t));!a&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(t=new URL("/tanda-2017/index.html",self.location).toString(),a=urlsToCacheKeys.has(t)),a&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(a){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,a),fetch(e.request)}))}});